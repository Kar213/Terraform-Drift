name: Terraform Drift Detection

on:
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * *'

jobs:
  drift-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module-path: ["modules/network", "modules/compute"]

    env:
      TF_IN_AUTOMATION: true
      AWS_REGION: ${{ secrets.AWS_REGION }}
      TF_VAR_region: ${{ secrets.AWS_REGION }}
      TF_VAR_backend_bucket: ${{ secrets.TF_BACKEND_BUCKET }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.5.7'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Init
        working-directory: ${{ matrix.module-path }}
        run: |
          terraform init -input=false -migrate-state \
            -backend-config="bucket=${{ secrets.TF_BACKEND_BUCKET }}" \
            -backend-config="key=${{ matrix.module-path }}/terraform.tfstate" \
            -backend-config="region=${{ secrets.AWS_REGION }}" \
            -backend-config="dynamodb_table=terraform-lock-table" \
            -backend-config="encrypt=true"

      - name: Ensure resources exist
        working-directory: ${{ matrix.module-path }}
        run: |
          echo "Checking if state exists in backend..."
          terraform state list || echo "No state found"
          terraform plan -input=false -no-color || true
          echo "If this is the first time, resources will be applied once."
          terraform apply -auto-approve -input=false || true

      - name: Terraform Plan (Detect Drift)
        id: plan
        working-directory: ${{ matrix.module-path }}
        run: |
          set +e
          terraform plan -detailed-exitcode -no-color > plan.txt
          EXIT_CODE=$?
          echo "Terraform plan exit code: $EXIT_CODE"
          echo "PLAN_EXIT_CODE=$EXIT_CODE" >> $GITHUB_ENV
          set -e

      - name: Capture plan output
        id: capture
        working-directory: ${{ matrix.module-path }}
        run: |
          echo "PLAN_CONTENT<<EOF" >> $GITHUB_ENV
          cat plan.txt >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Send Email if Drift Detected
        if: env.PLAN_EXIT_CODE == '2'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USER }}
          password: ${{ secrets.EMAIL_PASS }}
          subject: "Terraform Drift Detected in ${{ matrix.module-path }}"
          to: ${{ secrets.ALERT_EMAIL }}
          from: ${{ secrets.EMAIL_USER }}
          secure: true
          body: |
            Dear Team,

            Terraform has detected drift in the following module:
            **${{ matrix.module-path }}**

            Exit Code: ${{ env.PLAN_EXIT_CODE }}

            ---------------------------------------------------------------------
            ${{ env.PLAN_CONTENT }}
            ---------------------------------------------------------------------

            Regards,
            Terraform Drift Automation
